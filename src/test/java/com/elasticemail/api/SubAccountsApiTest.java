/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.api;

import com.elasticemail.client.ApiException;
import com.elasticemail.model.SubAccountInfo;
import com.elasticemail.model.SubaccountEmailCreditsPayload;
import com.elasticemail.model.SubaccountEmailSettings;
import com.elasticemail.model.SubaccountPayload;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubAccountsApi
 */
@Ignore
public class SubAccountsApiTest {

    private final SubAccountsApi api = new SubAccountsApi();

    
    /**
     * Add, Subtract Email Credits
     *
     * Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subaccountsByEmailCreditsPatchTest() throws ApiException {
        String email = null;
        SubaccountEmailCreditsPayload subaccountEmailCreditsPayload = null;
        api.subaccountsByEmailCreditsPatch(email, subaccountEmailCreditsPayload);

        // TODO: test validations
    }
    
    /**
     * Delete SubAccount
     *
     * Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subaccountsByEmailDeleteTest() throws ApiException {
        String email = null;
        api.subaccountsByEmailDelete(email);

        // TODO: test validations
    }
    
    /**
     * Load SubAccount
     *
     * Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subaccountsByEmailGetTest() throws ApiException {
        String email = null;
        SubAccountInfo response = api.subaccountsByEmailGet(email);

        // TODO: test validations
    }
    
    /**
     * Update SubAccount Email Settings
     *
     * Update SubAccount email settings. Required Access Level: ModifySubAccounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subaccountsByEmailSettingsEmailPutTest() throws ApiException {
        String email = null;
        SubaccountEmailSettings subaccountEmailSettings = null;
        SubaccountEmailSettings response = api.subaccountsByEmailSettingsEmailPut(email, subaccountEmailSettings);

        // TODO: test validations
    }
    
    /**
     * Load SubAccounts
     *
     * Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subaccountsGetTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        List<SubAccountInfo> response = api.subaccountsGet(limit, offset);

        // TODO: test validations
    }
    
    /**
     * Add SubAccount
     *
     * Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subaccountsPostTest() throws ApiException {
        SubaccountPayload subaccountPayload = null;
        SubAccountInfo response = api.subaccountsPost(subaccountPayload);

        // TODO: test validations
    }
    
}

/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import com.elasticemail.model.InboundRouteActionType;
import com.elasticemail.model.InboundRouteFilterType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for InboundRoute
 */
public class InboundRouteTest {
    private final InboundRoute model = new InboundRoute();

    /**
     * Model tests for InboundRoute
     */
    @Test
    public void testInboundRoute() {
        // TODO: test InboundRoute
    }

    /**
     * Test the property 'publicId'
     */
    @Test
    public void publicIdTest() {
        // TODO: test publicId
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'filterType'
     */
    @Test
    public void filterTypeTest() {
        // TODO: test filterType
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'actionType'
     */
    @Test
    public void actionTypeTest() {
        // TODO: test actionType
    }

    /**
     * Test the property 'actionParameter'
     */
    @Test
    public void actionParameterTest() {
        // TODO: test actionParameter
    }

    /**
     * Test the property 'sortOrder'
     */
    @Test
    public void sortOrderTest() {
        // TODO: test sortOrder
    }

}

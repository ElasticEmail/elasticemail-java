/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import com.elasticemail.model.FileUploadResult;
import com.elasticemail.model.VerificationStatus;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for VerificationFileResult
 */
public class VerificationFileResultTest {
    private final VerificationFileResult model = new VerificationFileResult();

    /**
     * Model tests for VerificationFileResult
     */
    @Test
    public void testVerificationFileResult() {
        // TODO: test VerificationFileResult
    }

    /**
     * Test the property 'verificationID'
     */
    @Test
    public void verificationIDTest() {
        // TODO: test verificationID
    }

    /**
     * Test the property 'filename'
     */
    @Test
    public void filenameTest() {
        // TODO: test filename
    }

    /**
     * Test the property 'verificationStatus'
     */
    @Test
    public void verificationStatusTest() {
        // TODO: test verificationStatus
    }

    /**
     * Test the property 'fileUploadResult'
     */
    @Test
    public void fileUploadResultTest() {
        // TODO: test fileUploadResult
    }

    /**
     * Test the property 'dateAdded'
     */
    @Test
    public void dateAddedTest() {
        // TODO: test dateAdded
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

}

/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import com.elasticemail.model.CertificateValidationStatus;
import com.elasticemail.model.DomainOwner;
import com.elasticemail.model.TrackingType;
import com.elasticemail.model.TrackingValidationStatus;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for DomainData
 */
public class DomainDataTest {
    private final DomainData model = new DomainData();

    /**
     * Model tests for DomainData
     */
    @Test
    public void testDomainData() {
        // TODO: test DomainData
    }

    /**
     * Test the property 'validationLog'
     */
    @Test
    public void validationLogTest() {
        // TODO: test validationLog
    }

    /**
     * Test the property 'domain'
     */
    @Test
    public void domainTest() {
        // TODO: test domain
    }

    /**
     * Test the property 'defaultDomain'
     */
    @Test
    public void defaultDomainTest() {
        // TODO: test defaultDomain
    }

    /**
     * Test the property 'spf'
     */
    @Test
    public void spfTest() {
        // TODO: test spf
    }

    /**
     * Test the property 'dkim'
     */
    @Test
    public void dkimTest() {
        // TODO: test dkim
    }

    /**
     * Test the property 'MX'
     */
    @Test
    public void MXTest() {
        // TODO: test MX
    }

    /**
     * Test the property 'DMARC'
     */
    @Test
    public void DMARCTest() {
        // TODO: test DMARC
    }

    /**
     * Test the property 'isRewriteDomainValid'
     */
    @Test
    public void isRewriteDomainValidTest() {
        // TODO: test isRewriteDomainValid
    }

    /**
     * Test the property 'verify'
     */
    @Test
    public void verifyTest() {
        // TODO: test verify
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'trackingStatus'
     */
    @Test
    public void trackingStatusTest() {
        // TODO: test trackingStatus
    }

    /**
     * Test the property 'certificateStatus'
     */
    @Test
    public void certificateStatusTest() {
        // TODO: test certificateStatus
    }

    /**
     * Test the property 'certificateValidationError'
     */
    @Test
    public void certificateValidationErrorTest() {
        // TODO: test certificateValidationError
    }

    /**
     * Test the property 'trackingTypeUserRequest'
     */
    @Test
    public void trackingTypeUserRequestTest() {
        // TODO: test trackingTypeUserRequest
    }

    /**
     * Test the property 'VERP'
     */
    @Test
    public void VERPTest() {
        // TODO: test VERP
    }

    /**
     * Test the property 'customBouncesDomain'
     */
    @Test
    public void customBouncesDomainTest() {
        // TODO: test customBouncesDomain
    }

    /**
     * Test the property 'isCustomBouncesDomainDefault'
     */
    @Test
    public void isCustomBouncesDomainDefaultTest() {
        // TODO: test isCustomBouncesDomainDefault
    }

    /**
     * Test the property 'isMarkedForDeletion'
     */
    @Test
    public void isMarkedForDeletionTest() {
        // TODO: test isMarkedForDeletion
    }

    /**
     * Test the property 'ownership'
     */
    @Test
    public void ownershipTest() {
        // TODO: test ownership
    }

}

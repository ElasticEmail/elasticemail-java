/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://app.elasticemail.com/marketing/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ChannelLogStatusSummary
 */
public class ChannelLogStatusSummaryTest {
    private final ChannelLogStatusSummary model = new ChannelLogStatusSummary();

    /**
     * Model tests for ChannelLogStatusSummary
     */
    @Test
    public void testChannelLogStatusSummary() {
        // TODO: test ChannelLogStatusSummary
    }

    /**
     * Test the property 'channelName'
     */
    @Test
    public void channelNameTest() {
        // TODO: test channelName
    }

    /**
     * Test the property 'recipients'
     */
    @Test
    public void recipientsTest() {
        // TODO: test recipients
    }

    /**
     * Test the property 'emailTotal'
     */
    @Test
    public void emailTotalTest() {
        // TODO: test emailTotal
    }

    /**
     * Test the property 'smsTotal'
     */
    @Test
    public void smsTotalTest() {
        // TODO: test smsTotal
    }

    /**
     * Test the property 'delivered'
     */
    @Test
    public void deliveredTest() {
        // TODO: test delivered
    }

    /**
     * Test the property 'bounced'
     */
    @Test
    public void bouncedTest() {
        // TODO: test bounced
    }

    /**
     * Test the property 'inProgress'
     */
    @Test
    public void inProgressTest() {
        // TODO: test inProgress
    }

    /**
     * Test the property 'opened'
     */
    @Test
    public void openedTest() {
        // TODO: test opened
    }

    /**
     * Test the property 'clicked'
     */
    @Test
    public void clickedTest() {
        // TODO: test clicked
    }

    /**
     * Test the property 'unsubscribed'
     */
    @Test
    public void unsubscribedTest() {
        // TODO: test unsubscribed
    }

    /**
     * Test the property 'complaints'
     */
    @Test
    public void complaintsTest() {
        // TODO: test complaints
    }

    /**
     * Test the property 'inbound'
     */
    @Test
    public void inboundTest() {
        // TODO: test inbound
    }

    /**
     * Test the property 'manualCancel'
     */
    @Test
    public void manualCancelTest() {
        // TODO: test manualCancel
    }

    /**
     * Test the property 'notDelivered'
     */
    @Test
    public void notDeliveredTest() {
        // TODO: test notDelivered
    }

}

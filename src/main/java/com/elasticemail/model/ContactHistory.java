/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import java.util.Objects;
import java.util.Arrays;
import com.elasticemail.model.ContactHistEventType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ContactHistory
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-08-26T16:27:07.739303Z[Etc/UTC]")
public class ContactHistory {
  public static final String SERIALIZED_NAME_EVENT_TYPE = "EventType";
  @SerializedName(SERIALIZED_NAME_EVENT_TYPE)
  private ContactHistEventType eventType;

  public static final String SERIALIZED_NAME_EVENT_DATE = "EventDate";
  @SerializedName(SERIALIZED_NAME_EVENT_DATE)
  private OffsetDateTime eventDate;

  public static final String SERIALIZED_NAME_CHANNEL_NAME = "ChannelName";
  @SerializedName(SERIALIZED_NAME_CHANNEL_NAME)
  private String channelName;

  public static final String SERIALIZED_NAME_TEMPLATE_NAME = "TemplateName";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_NAME)
  private String templateName;

  public static final String SERIALIZED_NAME_IP_ADDRESS = "IPAddress";
  @SerializedName(SERIALIZED_NAME_IP_ADDRESS)
  private String ipAddress;

  public static final String SERIALIZED_NAME_COUNTRY = "Country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_DATA = "Data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private String data;


  public ContactHistory eventType(ContactHistEventType eventType) {
    
    this.eventType = eventType;
    return this;
  }

   /**
   * Type of event occured on this Contact.
   * @return eventType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of event occured on this Contact.")

  public ContactHistEventType getEventType() {
    return eventType;
  }


  public void setEventType(ContactHistEventType eventType) {
    this.eventType = eventType;
  }


  public ContactHistory eventDate(OffsetDateTime eventDate) {
    
    this.eventDate = eventDate;
    return this;
  }

   /**
   * Formatted date of event.
   * @return eventDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Formatted date of event.")

  public OffsetDateTime getEventDate() {
    return eventDate;
  }


  public void setEventDate(OffsetDateTime eventDate) {
    this.eventDate = eventDate;
  }


  public ContactHistory channelName(String channelName) {
    
    this.channelName = channelName;
    return this;
  }

   /**
   * Name of channel this event occured on
   * @return channelName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of channel this event occured on")

  public String getChannelName() {
    return channelName;
  }


  public void setChannelName(String channelName) {
    this.channelName = channelName;
  }


  public ContactHistory templateName(String templateName) {
    
    this.templateName = templateName;
    return this;
  }

   /**
   * Name of template this event occured on
   * @return templateName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of template this event occured on")

  public String getTemplateName() {
    return templateName;
  }


  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }


  public ContactHistory ipAddress(String ipAddress) {
    
    this.ipAddress = ipAddress;
    return this;
  }

   /**
   * IP Address of the event.
   * @return ipAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IP Address of the event.")

  public String getIpAddress() {
    return ipAddress;
  }


  public void setIpAddress(String ipAddress) {
    this.ipAddress = ipAddress;
  }


  public ContactHistory country(String country) {
    
    this.country = country;
    return this;
  }

   /**
   * Country of the event.
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Country of the event.")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    this.country = country;
  }


  public ContactHistory data(String data) {
    
    this.data = data;
    return this;
  }

   /**
   * Additional information about the event
   * @return data
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Additional information about the event")

  public String getData() {
    return data;
  }


  public void setData(String data) {
    this.data = data;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactHistory contactHistory = (ContactHistory) o;
    return Objects.equals(this.eventType, contactHistory.eventType) &&
        Objects.equals(this.eventDate, contactHistory.eventDate) &&
        Objects.equals(this.channelName, contactHistory.channelName) &&
        Objects.equals(this.templateName, contactHistory.templateName) &&
        Objects.equals(this.ipAddress, contactHistory.ipAddress) &&
        Objects.equals(this.country, contactHistory.country) &&
        Objects.equals(this.data, contactHistory.data);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventType, eventDate, channelName, templateName, ipAddress, country, data);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactHistory {\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    channelName: ").append(toIndentedString(channelName)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    ipAddress: ").append(toIndentedString(ipAddress)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Change the ordering of this inbound route for when matching the inbound
 */
@ApiModel(description = "Change the ordering of this inbound route for when matching the inbound")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-01T07:02:59.691443Z[GMT]")
public class SortOrderItem {
  public static final String SERIALIZED_NAME_PUBLIC_INBOUND_ID = "PublicInboundId";
  @SerializedName(SERIALIZED_NAME_PUBLIC_INBOUND_ID)
  private String publicInboundId;

  public static final String SERIALIZED_NAME_SORT_ORDER = "SortOrder";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Integer sortOrder;


  public SortOrderItem publicInboundId(String publicInboundId) {
    
    this.publicInboundId = publicInboundId;
    return this;
  }

   /**
   * ID of the route to change the order of
   * @return publicInboundId
  **/
  @ApiModelProperty(required = true, value = "ID of the route to change the order of")

  public String getPublicInboundId() {
    return publicInboundId;
  }


  public void setPublicInboundId(String publicInboundId) {
    this.publicInboundId = publicInboundId;
  }


  public SortOrderItem sortOrder(Integer sortOrder) {
    
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * 1 - route will be used first
   * @return sortOrder
  **/
  @ApiModelProperty(required = true, value = "1 - route will be used first")

  public Integer getSortOrder() {
    return sortOrder;
  }


  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SortOrderItem sortOrderItem = (SortOrderItem) o;
    return Objects.equals(this.publicInboundId, sortOrderItem.publicInboundId) &&
        Objects.equals(this.sortOrder, sortOrderItem.sortOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicInboundId, sortOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SortOrderItem {\n");
    sb.append("    publicInboundId: ").append(toIndentedString(publicInboundId)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


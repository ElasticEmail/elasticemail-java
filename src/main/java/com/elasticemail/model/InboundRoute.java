/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import java.util.Objects;
import java.util.Arrays;
import com.elasticemail.model.InboundRouteActionType;
import com.elasticemail.model.InboundRouteFilterType;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * InboundRoute
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-06-01T07:02:59.691443Z[GMT]")
public class InboundRoute {
  public static final String SERIALIZED_NAME_PUBLIC_ID = "PublicId";
  @SerializedName(SERIALIZED_NAME_PUBLIC_ID)
  private String publicId;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_FILTER_TYPE = "FilterType";
  @SerializedName(SERIALIZED_NAME_FILTER_TYPE)
  private InboundRouteFilterType filterType = null;

  public static final String SERIALIZED_NAME_FILTER = "Filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private String filter;

  public static final String SERIALIZED_NAME_ACTION_TYPE = "ActionType";
  @SerializedName(SERIALIZED_NAME_ACTION_TYPE)
  private InboundRouteActionType actionType = null;

  public static final String SERIALIZED_NAME_ACTION_PARAMETER = "ActionParameter";
  @SerializedName(SERIALIZED_NAME_ACTION_PARAMETER)
  private String actionParameter;

  public static final String SERIALIZED_NAME_SORT_ORDER = "SortOrder";
  @SerializedName(SERIALIZED_NAME_SORT_ORDER)
  private Integer sortOrder;


  public InboundRoute publicId(String publicId) {
    
    this.publicId = publicId;
    return this;
  }

   /**
   * Get publicId
   * @return publicId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPublicId() {
    return publicId;
  }


  public void setPublicId(String publicId) {
    this.publicId = publicId;
  }


  public InboundRoute name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of this route
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of this route")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public InboundRoute filterType(InboundRouteFilterType filterType) {
    
    this.filterType = filterType;
    return this;
  }

   /**
   * Type of the filter
   * @return filterType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of the filter")

  public InboundRouteFilterType getFilterType() {
    return filterType;
  }


  public void setFilterType(InboundRouteFilterType filterType) {
    this.filterType = filterType;
  }


  public InboundRoute filter(String filter) {
    
    this.filter = filter;
    return this;
  }

   /**
   * Filter of the inbound data
   * @return filter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Filter of the inbound data")

  public String getFilter() {
    return filter;
  }


  public void setFilter(String filter) {
    this.filter = filter;
  }


  public InboundRoute actionType(InboundRouteActionType actionType) {
    
    this.actionType = actionType;
    return this;
  }

   /**
   * Type of action to take
   * @return actionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of action to take")

  public InboundRouteActionType getActionType() {
    return actionType;
  }


  public void setActionType(InboundRouteActionType actionType) {
    this.actionType = actionType;
  }


  public InboundRoute actionParameter(String actionParameter) {
    
    this.actionParameter = actionParameter;
    return this;
  }

   /**
   * URL address or Email to notify about the inbound
   * @return actionParameter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "URL address or Email to notify about the inbound")

  public String getActionParameter() {
    return actionParameter;
  }


  public void setActionParameter(String actionParameter) {
    this.actionParameter = actionParameter;
  }


  public InboundRoute sortOrder(Integer sortOrder) {
    
    this.sortOrder = sortOrder;
    return this;
  }

   /**
   * Place of this route in your routes queue&#39;s order
   * @return sortOrder
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Place of this route in your routes queue's order")

  public Integer getSortOrder() {
    return sortOrder;
  }


  public void setSortOrder(Integer sortOrder) {
    this.sortOrder = sortOrder;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InboundRoute inboundRoute = (InboundRoute) o;
    return Objects.equals(this.publicId, inboundRoute.publicId) &&
        Objects.equals(this.name, inboundRoute.name) &&
        Objects.equals(this.filterType, inboundRoute.filterType) &&
        Objects.equals(this.filter, inboundRoute.filter) &&
        Objects.equals(this.actionType, inboundRoute.actionType) &&
        Objects.equals(this.actionParameter, inboundRoute.actionParameter) &&
        Objects.equals(this.sortOrder, inboundRoute.sortOrder);
  }

  @Override
  public int hashCode() {
    return Objects.hash(publicId, name, filterType, filter, actionType, actionParameter, sortOrder);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InboundRoute {\n");
    sb.append("    publicId: ").append(toIndentedString(publicId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    filterType: ").append(toIndentedString(filterType)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    actionType: ").append(toIndentedString(actionType)).append("\n");
    sb.append("    actionParameter: ").append(toIndentedString(actionParameter)).append("\n");
    sb.append("    sortOrder: ").append(toIndentedString(sortOrder)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


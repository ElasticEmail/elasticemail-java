/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * ContactActivity
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-27T12:28:45.459634Z[Etc/UTC]")
public class ContactActivity {
  public static final String SERIALIZED_NAME_TOTAL_SENT = "TotalSent";
  @SerializedName(SERIALIZED_NAME_TOTAL_SENT)
  private Integer totalSent;

  public static final String SERIALIZED_NAME_TOTAL_OPENED = "TotalOpened";
  @SerializedName(SERIALIZED_NAME_TOTAL_OPENED)
  private Integer totalOpened;

  public static final String SERIALIZED_NAME_TOTAL_CLICKED = "TotalClicked";
  @SerializedName(SERIALIZED_NAME_TOTAL_CLICKED)
  private Integer totalClicked;

  public static final String SERIALIZED_NAME_TOTAL_FAILED = "TotalFailed";
  @SerializedName(SERIALIZED_NAME_TOTAL_FAILED)
  private Integer totalFailed;

  public static final String SERIALIZED_NAME_LAST_SENT = "LastSent";
  @SerializedName(SERIALIZED_NAME_LAST_SENT)
  private OffsetDateTime lastSent;

  public static final String SERIALIZED_NAME_LAST_OPENED = "LastOpened";
  @SerializedName(SERIALIZED_NAME_LAST_OPENED)
  private OffsetDateTime lastOpened;

  public static final String SERIALIZED_NAME_LAST_CLICKED = "LastClicked";
  @SerializedName(SERIALIZED_NAME_LAST_CLICKED)
  private OffsetDateTime lastClicked;

  public static final String SERIALIZED_NAME_LAST_FAILED = "LastFailed";
  @SerializedName(SERIALIZED_NAME_LAST_FAILED)
  private OffsetDateTime lastFailed;

  public static final String SERIALIZED_NAME_LAST_I_P = "LastIP";
  @SerializedName(SERIALIZED_NAME_LAST_I_P)
  private String lastIP;

  public static final String SERIALIZED_NAME_ERROR_CODE = "ErrorCode";
  @SerializedName(SERIALIZED_NAME_ERROR_CODE)
  private Integer errorCode;

  public static final String SERIALIZED_NAME_FRIENDLY_ERROR_MESSAGE = "FriendlyErrorMessage";
  @SerializedName(SERIALIZED_NAME_FRIENDLY_ERROR_MESSAGE)
  private String friendlyErrorMessage;


  public ContactActivity totalSent(Integer totalSent) {
    
    this.totalSent = totalSent;
    return this;
  }

   /**
   * Total emails sent.
   * @return totalSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "Total emails sent.")

  public Integer getTotalSent() {
    return totalSent;
  }


  public void setTotalSent(Integer totalSent) {
    this.totalSent = totalSent;
  }


  public ContactActivity totalOpened(Integer totalOpened) {
    
    this.totalOpened = totalOpened;
    return this;
  }

   /**
   * Total emails opened.
   * @return totalOpened
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "Total emails opened.")

  public Integer getTotalOpened() {
    return totalOpened;
  }


  public void setTotalOpened(Integer totalOpened) {
    this.totalOpened = totalOpened;
  }


  public ContactActivity totalClicked(Integer totalClicked) {
    
    this.totalClicked = totalClicked;
    return this;
  }

   /**
   * Total emails clicked
   * @return totalClicked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "Total emails clicked")

  public Integer getTotalClicked() {
    return totalClicked;
  }


  public void setTotalClicked(Integer totalClicked) {
    this.totalClicked = totalClicked;
  }


  public ContactActivity totalFailed(Integer totalFailed) {
    
    this.totalFailed = totalFailed;
    return this;
  }

   /**
   * Total emails failed.
   * @return totalFailed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "Total emails failed.")

  public Integer getTotalFailed() {
    return totalFailed;
  }


  public void setTotalFailed(Integer totalFailed) {
    this.totalFailed = totalFailed;
  }


  public ContactActivity lastSent(OffsetDateTime lastSent) {
    
    this.lastSent = lastSent;
    return this;
  }

   /**
   * Last date when an email was sent to this contact
   * @return lastSent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last date when an email was sent to this contact")

  public OffsetDateTime getLastSent() {
    return lastSent;
  }


  public void setLastSent(OffsetDateTime lastSent) {
    this.lastSent = lastSent;
  }


  public ContactActivity lastOpened(OffsetDateTime lastOpened) {
    
    this.lastOpened = lastOpened;
    return this;
  }

   /**
   * Date this contact last opened an email
   * @return lastOpened
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date this contact last opened an email")

  public OffsetDateTime getLastOpened() {
    return lastOpened;
  }


  public void setLastOpened(OffsetDateTime lastOpened) {
    this.lastOpened = lastOpened;
  }


  public ContactActivity lastClicked(OffsetDateTime lastClicked) {
    
    this.lastClicked = lastClicked;
    return this;
  }

   /**
   * Date this contact last clicked an email
   * @return lastClicked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date this contact last clicked an email")

  public OffsetDateTime getLastClicked() {
    return lastClicked;
  }


  public void setLastClicked(OffsetDateTime lastClicked) {
    this.lastClicked = lastClicked;
  }


  public ContactActivity lastFailed(OffsetDateTime lastFailed) {
    
    this.lastFailed = lastFailed;
    return this;
  }

   /**
   * Last date when an email sent to this contact bounced
   * @return lastFailed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last date when an email sent to this contact bounced")

  public OffsetDateTime getLastFailed() {
    return lastFailed;
  }


  public void setLastFailed(OffsetDateTime lastFailed) {
    this.lastFailed = lastFailed;
  }


  public ContactActivity lastIP(String lastIP) {
    
    this.lastIP = lastIP;
    return this;
  }

   /**
   * IP from which this contact opened or clicked their email last time
   * @return lastIP
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "IP from which this contact opened or clicked their email last time")

  public String getLastIP() {
    return lastIP;
  }


  public void setLastIP(String lastIP) {
    this.lastIP = lastIP;
  }


  public ContactActivity errorCode(Integer errorCode) {
    
    this.errorCode = errorCode;
    return this;
  }

   /**
   * Last RFC Error code if any occurred
   * @return errorCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last RFC Error code if any occurred")

  public Integer getErrorCode() {
    return errorCode;
  }


  public void setErrorCode(Integer errorCode) {
    this.errorCode = errorCode;
  }


  public ContactActivity friendlyErrorMessage(String friendlyErrorMessage) {
    
    this.friendlyErrorMessage = friendlyErrorMessage;
    return this;
  }

   /**
   * Last RFC error message if any occurred
   * @return friendlyErrorMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last RFC error message if any occurred")

  public String getFriendlyErrorMessage() {
    return friendlyErrorMessage;
  }


  public void setFriendlyErrorMessage(String friendlyErrorMessage) {
    this.friendlyErrorMessage = friendlyErrorMessage;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContactActivity contactActivity = (ContactActivity) o;
    return Objects.equals(this.totalSent, contactActivity.totalSent) &&
        Objects.equals(this.totalOpened, contactActivity.totalOpened) &&
        Objects.equals(this.totalClicked, contactActivity.totalClicked) &&
        Objects.equals(this.totalFailed, contactActivity.totalFailed) &&
        Objects.equals(this.lastSent, contactActivity.lastSent) &&
        Objects.equals(this.lastOpened, contactActivity.lastOpened) &&
        Objects.equals(this.lastClicked, contactActivity.lastClicked) &&
        Objects.equals(this.lastFailed, contactActivity.lastFailed) &&
        Objects.equals(this.lastIP, contactActivity.lastIP) &&
        Objects.equals(this.errorCode, contactActivity.errorCode) &&
        Objects.equals(this.friendlyErrorMessage, contactActivity.friendlyErrorMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalSent, totalOpened, totalClicked, totalFailed, lastSent, lastOpened, lastClicked, lastFailed, lastIP, errorCode, friendlyErrorMessage);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContactActivity {\n");
    sb.append("    totalSent: ").append(toIndentedString(totalSent)).append("\n");
    sb.append("    totalOpened: ").append(toIndentedString(totalOpened)).append("\n");
    sb.append("    totalClicked: ").append(toIndentedString(totalClicked)).append("\n");
    sb.append("    totalFailed: ").append(toIndentedString(totalFailed)).append("\n");
    sb.append("    lastSent: ").append(toIndentedString(lastSent)).append("\n");
    sb.append("    lastOpened: ").append(toIndentedString(lastOpened)).append("\n");
    sb.append("    lastClicked: ").append(toIndentedString(lastClicked)).append("\n");
    sb.append("    lastFailed: ").append(toIndentedString(lastFailed)).append("\n");
    sb.append("    lastIP: ").append(toIndentedString(lastIP)).append("\n");
    sb.append("    errorCode: ").append(toIndentedString(errorCode)).append("\n");
    sb.append("    friendlyErrorMessage: ").append(toIndentedString(friendlyErrorMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


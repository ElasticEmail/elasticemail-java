/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * MessageAttachment
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-10T10:01:55.764174Z[Etc/UTC]")
public class MessageAttachment {
  public static final String SERIALIZED_NAME_BINARY_CONTENT = "BinaryContent";
  @SerializedName(SERIALIZED_NAME_BINARY_CONTENT)
  private byte[] binaryContent;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "ContentType";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;


  public MessageAttachment binaryContent(byte[] binaryContent) {
    
    this.binaryContent = binaryContent;
    return this;
  }

   /**
   * File&#39;s content as byte array (or a Base64 string)
   * @return binaryContent
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "File's content as byte array (or a Base64 string)")

  public byte[] getBinaryContent() {
    return binaryContent;
  }


  public void setBinaryContent(byte[] binaryContent) {
    this.binaryContent = binaryContent;
  }


  public MessageAttachment name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Display name of the file
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Display name of the file")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public MessageAttachment contentType(String contentType) {
    
    this.contentType = contentType;
    return this;
  }

   /**
   * MIME content type
   * @return contentType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "MIME content type")

  public String getContentType() {
    return contentType;
  }


  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessageAttachment messageAttachment = (MessageAttachment) o;
    return Arrays.equals(this.binaryContent, messageAttachment.binaryContent) &&
        Objects.equals(this.name, messageAttachment.name) &&
        Objects.equals(this.contentType, messageAttachment.contentType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(Arrays.hashCode(binaryContent), name, contentType);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessageAttachment {\n");
    sb.append("    binaryContent: ").append(toIndentedString(binaryContent)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


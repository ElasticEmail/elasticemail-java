/*
 * Elastic Email REST API
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a target=\"_blank\" href=\"https://api.elasticemail.com/public/help\">here</a>.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.elasticemail.model;

import java.util.Objects;
import java.util.Arrays;
import com.elasticemail.model.BodyPart;
import com.elasticemail.model.MessageAttachment;
import com.elasticemail.model.Utm;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Proper e-mail content
 */
@ApiModel(description = "Proper e-mail content")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-01-31T08:08:48.625855188Z[Etc/UTC]")
public class EmailContent {
  public static final String SERIALIZED_NAME_BODY = "Body";
  @SerializedName(SERIALIZED_NAME_BODY)
  private List<BodyPart> body = null;

  public static final String SERIALIZED_NAME_MERGE = "Merge";
  @SerializedName(SERIALIZED_NAME_MERGE)
  private Map<String, String> merge = null;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "Attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<MessageAttachment> attachments = null;

  public static final String SERIALIZED_NAME_HEADERS = "Headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private Map<String, String> headers = null;

  public static final String SERIALIZED_NAME_POSTBACK = "Postback";
  @SerializedName(SERIALIZED_NAME_POSTBACK)
  private String postback;

  public static final String SERIALIZED_NAME_ENVELOPE_FROM = "EnvelopeFrom";
  @SerializedName(SERIALIZED_NAME_ENVELOPE_FROM)
  private String envelopeFrom;

  public static final String SERIALIZED_NAME_FROM = "From";
  @SerializedName(SERIALIZED_NAME_FROM)
  private String from;

  public static final String SERIALIZED_NAME_REPLY_TO = "ReplyTo";
  @SerializedName(SERIALIZED_NAME_REPLY_TO)
  private String replyTo;

  public static final String SERIALIZED_NAME_SUBJECT = "Subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_TEMPLATE_NAME = "TemplateName";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_NAME)
  private String templateName;

  public static final String SERIALIZED_NAME_ATTACH_FILES = "AttachFiles";
  @SerializedName(SERIALIZED_NAME_ATTACH_FILES)
  private List<String> attachFiles = null;

  public static final String SERIALIZED_NAME_UTM = "Utm";
  @SerializedName(SERIALIZED_NAME_UTM)
  private Utm utm;

  public EmailContent() { 
  }

  public EmailContent body(List<BodyPart> body) {
    
    this.body = body;
    return this;
  }

  public EmailContent addBodyItem(BodyPart bodyItem) {
    if (this.body == null) {
      this.body = new ArrayList<BodyPart>();
    }
    this.body.add(bodyItem);
    return this;
  }

   /**
   * List of e-mail body parts, with user-provided MIME types (text/html, text/plain etc)
   * @return body
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of e-mail body parts, with user-provided MIME types (text/html, text/plain etc)")

  public List<BodyPart> getBody() {
    return body;
  }


  public void setBody(List<BodyPart> body) {
    this.body = body;
  }


  public EmailContent merge(Map<String, String> merge) {
    
    this.merge = merge;
    return this;
  }

  public EmailContent putMergeItem(String key, String mergeItem) {
    if (this.merge == null) {
      this.merge = new HashMap<String, String>();
    }
    this.merge.put(key, mergeItem);
    return this;
  }

   /**
   * A key-value collection of custom merge fields, shared between recipients. Should be used in e-mail body like so: {firstname}, {lastname} etc.
   * @return merge
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"city\":\"New York\",\"age\":\"34\"}", value = "A key-value collection of custom merge fields, shared between recipients. Should be used in e-mail body like so: {firstname}, {lastname} etc.")

  public Map<String, String> getMerge() {
    return merge;
  }


  public void setMerge(Map<String, String> merge) {
    this.merge = merge;
  }


  public EmailContent attachments(List<MessageAttachment> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public EmailContent addAttachmentsItem(MessageAttachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<MessageAttachment>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Attachments provided by sending binary data
   * @return attachments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Attachments provided by sending binary data")

  public List<MessageAttachment> getAttachments() {
    return attachments;
  }


  public void setAttachments(List<MessageAttachment> attachments) {
    this.attachments = attachments;
  }


  public EmailContent headers(Map<String, String> headers) {
    
    this.headers = headers;
    return this;
  }

  public EmailContent putHeadersItem(String key, String headersItem) {
    if (this.headers == null) {
      this.headers = new HashMap<String, String>();
    }
    this.headers.put(key, headersItem);
    return this;
  }

   /**
   * A key-value collection of custom e-mail headers.
   * @return headers
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{\"city\":\"New York\",\"age\":\"34\"}", value = "A key-value collection of custom e-mail headers.")

  public Map<String, String> getHeaders() {
    return headers;
  }


  public void setHeaders(Map<String, String> headers) {
    this.headers = headers;
  }


  public EmailContent postback(String postback) {
    
    this.postback = postback;
    return this;
  }

   /**
   * Postback header.
   * @return postback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Postback header.")

  public String getPostback() {
    return postback;
  }


  public void setPostback(String postback) {
    this.postback = postback;
  }


  public EmailContent envelopeFrom(String envelopeFrom) {
    
    this.envelopeFrom = envelopeFrom;
    return this;
  }

   /**
   * E-mail with an optional name to be used as the envelope from address (e.g.: John Doe &lt;email@domain.com&gt;)
   * @return envelopeFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Doe <email@domain.com>", value = "E-mail with an optional name to be used as the envelope from address (e.g.: John Doe <email@domain.com>)")

  public String getEnvelopeFrom() {
    return envelopeFrom;
  }


  public void setEnvelopeFrom(String envelopeFrom) {
    this.envelopeFrom = envelopeFrom;
  }


  public EmailContent from(String from) {
    
    this.from = from;
    return this;
  }

   /**
   * Your e-mail with an optional name (e.g.: John Doe &lt;email@domain.com&gt;)
   * @return from
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Doe <email@domain.com>", value = "Your e-mail with an optional name (e.g.: John Doe <email@domain.com>)")

  public String getFrom() {
    return from;
  }


  public void setFrom(String from) {
    this.from = from;
  }


  public EmailContent replyTo(String replyTo) {
    
    this.replyTo = replyTo;
    return this;
  }

   /**
   * To what address should the recipients reply to (e.g. John Doe &lt;email@domain.com&gt;)
   * @return replyTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "John Doe <email@domain.com>", value = "To what address should the recipients reply to (e.g. John Doe <email@domain.com>)")

  public String getReplyTo() {
    return replyTo;
  }


  public void setReplyTo(String replyTo) {
    this.replyTo = replyTo;
  }


  public EmailContent subject(String subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Default subject of email.
   * @return subject
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Hello!", value = "Default subject of email.")

  public String getSubject() {
    return subject;
  }


  public void setSubject(String subject) {
    this.subject = subject;
  }


  public EmailContent templateName(String templateName) {
    
    this.templateName = templateName;
    return this;
  }

   /**
   * Name of template.
   * @return templateName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Template01", value = "Name of template.")

  public String getTemplateName() {
    return templateName;
  }


  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }


  public EmailContent attachFiles(List<String> attachFiles) {
    
    this.attachFiles = attachFiles;
    return this;
  }

  public EmailContent addAttachFilesItem(String attachFilesItem) {
    if (this.attachFiles == null) {
      this.attachFiles = new ArrayList<String>();
    }
    this.attachFiles.add(attachFilesItem);
    return this;
  }

   /**
   * Names of previously uploaded files that should be sent as downloadable attachments
   * @return attachFiles
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[ \"preuploaded.jpg\" ]", value = "Names of previously uploaded files that should be sent as downloadable attachments")

  public List<String> getAttachFiles() {
    return attachFiles;
  }


  public void setAttachFiles(List<String> attachFiles) {
    this.attachFiles = attachFiles;
  }


  public EmailContent utm(Utm utm) {
    
    this.utm = utm;
    return this;
  }

   /**
   * Get utm
   * @return utm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Utm getUtm() {
    return utm;
  }


  public void setUtm(Utm utm) {
    this.utm = utm;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmailContent emailContent = (EmailContent) o;
    return Objects.equals(this.body, emailContent.body) &&
        Objects.equals(this.merge, emailContent.merge) &&
        Objects.equals(this.attachments, emailContent.attachments) &&
        Objects.equals(this.headers, emailContent.headers) &&
        Objects.equals(this.postback, emailContent.postback) &&
        Objects.equals(this.envelopeFrom, emailContent.envelopeFrom) &&
        Objects.equals(this.from, emailContent.from) &&
        Objects.equals(this.replyTo, emailContent.replyTo) &&
        Objects.equals(this.subject, emailContent.subject) &&
        Objects.equals(this.templateName, emailContent.templateName) &&
        Objects.equals(this.attachFiles, emailContent.attachFiles) &&
        Objects.equals(this.utm, emailContent.utm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(body, merge, attachments, headers, postback, envelopeFrom, from, replyTo, subject, templateName, attachFiles, utm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmailContent {\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    merge: ").append(toIndentedString(merge)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    postback: ").append(toIndentedString(postback)).append("\n");
    sb.append("    envelopeFrom: ").append(toIndentedString(envelopeFrom)).append("\n");
    sb.append("    from: ").append(toIndentedString(from)).append("\n");
    sb.append("    replyTo: ").append(toIndentedString(replyTo)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    attachFiles: ").append(toIndentedString(attachFiles)).append("\n");
    sb.append("    utm: ").append(toIndentedString(utm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

